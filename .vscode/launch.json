{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [{
            "type": "node",
            "request": "attach",
            "name": "Attach by Process ID",
            "processId": "${command:PickProcess}"
        },
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "enter program name, for example ${workspaceFolder}/a.out",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [{
                "description": "Enable pretty-printing for gdb",
                "text": "-enable-pretty-printing",
                "ignoreFailures": true
            }]
        },
        {
            "type": "node",
            "request": "launch",
            "name": "MochaTestsUpdateServer",
            "preLaunchTask": "Mkdir",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "args": [
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/update-serv/dist/test/*.test.js"
            ],
            "internalConsoleOptions": "openOnSessionStart"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch server",
            "program": "${workspaceFolder}/update-serv/dist/server.js",
            "args": [
                "${workspaceFolder}/update-serv/public"
            ],
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch XXX-SERV Program",
            "program": "${workspaceFolder}/dist/comm-serv/comm-serv-startup.js",
            "outputCapture": "std"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch samXXX-SERV Program",
            "program": "${workspaceFolder}/dist/comm-serv/comm-serv-startupsam.js",
            "outputCapture": "std"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch UBCLinux-SERV Program",
            "program": "${workspaceFolder}/dist/ubc-linux/broadcast-serv-startup.js", // ubc-serv-startup
            "outputCapture": "std"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch myserver Program",
            "program": "${workspaceFolder}/dist/comm-serv/myserver.js",
            "outputCapture": "std"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch myserverhttps Program",
            "program": "${workspaceFolder}/dist/comm-serv/myserverhttps.js",
            "outputCapture": "std"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch Sam",
            "program": "${workspaceFolder}/dist/comm-serv/RPC/comm-serv-startupsam.js",
            "outputCapture": "std"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Launch info-serv-info-fo",
            "program": "${workspaceFolder}/dist/info-serv-info-fo/info-serv-startup.js",
            "outputCapture": "std"
        },
        {
            "type": "node",
            "request": "launch",
            "name": "Mocha All",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "args": [
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/dist/test/unit/**/*test.js"
            ],
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen"
        },
        {
            "name": "C++ Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "/usr/bin/node", //node vm地址
            "args": [
                "${workspaceFolder}/dist/hw_serv/node_layer/qrc_scanner/qrc_scanner.js"
            ], //宿主js地址
            "stopAtEntry": true,
            "cwd": "${workspaceRoot}",
            "environment": [],
            "externalConsole": true,
            "linux": {
                "MIMode": "gdb",
                "setupCommands": [{
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }]
            },
            "osx": {
                "MIMode": "lldb"
            },
            "windows": {
                "MIMode": "gdb",
                "setupCommands": [{
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }]
            }
        },
        {
            "name": "C++ Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "${workspaceRoot}/hw_serv/build/Debug/QRCScannerAddon.node", //插件地址
            "processId": "${command:pickProcess}", //进程id
            "linux": {
                "MIMode": "gdb",
                "setupCommands": [{
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }]
            },
            "osx": {
                "MIMode": "lldb"
            },
            "windows": {
                "MIMode": "gdb",
                "setupCommands": [{
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }]
            }
        },
        {
            "name": "Debug Main Process Serve",
            "type": "node",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/electron",
            "windows": {
                "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/electron.cmd"
            },
            "args": [
                "./dist/ele-main.js",
                "--serve"
            ],
            "outputCapture": "std"
        },
        {
            "name": "Debug Main Process",
            "type": "node",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/electron",
            "windows": {
                "runtimeExecutable": "${workspaceRoot}/node_modules/.bin/electron.cmd"
            },
            "args": [
                "./dist/ele-main.js"
            ],
            "outputCapture": "std"
        }
    ]
}
