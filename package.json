{
  "name": "Kiosk",
  "version": "1.0.38",
  "description": "Kiosk Betting App(Typescript + SASS + Hot Reload)",
  "homepage": "http://www.hkjc.com",
  "author": {
    "name": "",
    "email": "eakiosk@hkjc.org"
  },
  "keywords": [
    "angular",
    "angular 7",
    "electron",
    "typescript",
    "sass"
  ],
  "main": "dist/ele-main.js",
  "private": true,
  "nyc": {
    "include": [
      "dist/**/*.js"
    ],
    "exclude": [
      "**/*.spec.js",
      "**/*.test.js"
    ],
    "reporter": [
      "html"
    ],
    "sourceMap": false,
    "all": false,
    "check-coverage": true
  },
  "scripts": {
    "releaseHwImage": "npm i && npm run build-all-w-hwAddon:prod && npm run release",
    "postinstall": "npm run postinstall:electron && npx electron-builder install-app-deps",
    "postinstall:web": "node postinstall-web",
    "postinstall:electron": "node postinstall",
    "ng": "ng",
    "start": "npm run postinstall:electron && npm-run-all -p ng:serve electron:serve",
    "build": "npm run postinstall:electron && ng build && npm run electron:serve-tsc && npm run build-random-addon && npm run build-ttst-addon && npm run build-ubc",
    "build:dev": "npm run build -- -c dev",
    "build:prod": "npm run build -- -c production",
    "ng:serve": "ng serve",
    "ng:serve:web": "npm run postinstall:web && ng serve -o",
    "electron:serve-tsc": "tsc -p tsconfig-serve.json",
    "electron:serve": "wait-on http-get://localhost:4200/ && npm run electron:serve-tsc && npm run copymockdata && electron ./dist/ele-main.js --serve",
    "electron:local": "npm run build:prod && electron ./dist/ele-main.js",
    "electron:linux": "npm run build:prod && npx electron-builder build --linux",
    "electron:windows": "npm run build:prod && npx electron-builder build --windows",
    "electron:mac": "npm run build:prod && npx electron-builder build --mac",
    "e2e": "npm run postinstall:web && ng e2e",
    "version": "conventional-changelog -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md",
    "electron:rebuild": "HOME=~/.electron-gyp node-gyp rebuild --target=4.0.0 --arch=x64 --dist-url=https://atom.io/download/electron",
    "build-hw-addon": "cd ./hw-serv && node-gyp configure build && cp -rf build ../ && cd ..&& npm run copyHWRes",
    "build-random-addon": "cd ./beteng-serv/random-addon/CIT_Random && make && make install && make clean && cd .. && node-gyp configure build && cp -rf build/Release/*.node ../../dist/beteng-serv/random-addon/",
    "build-ttst-addon": "cd ./beteng-serv/ttst-wrapper && node-gyp configure build && cp -rf build/Release/*.node ../../dist/beteng-serv/ttst-wrapper/",
    "sam-test": "tsc -p ./test/tsconfig.json && _mocha --exit dist/test/unit/comm-serv/mytest.js",
    "build-terminal": "cd ./test/unit/comm-serv/addon && node-gyp rebuild && cp -rf build/Release/*.node ../../../../dist/test/unit/comm-serv/addon/",
    "build-odds": "cd ./comm-serv/addon && mkdir -p ../../dist/comm-serv/addon && node-gyp rebuild && cp -rf build/Release/*.node ../../dist/comm-serv/addon/",
    "build-ubc": "cd ./ubc-linux && sudo ../node_modules/.bin/node-gyp configure --debug build && cp -rf build/Debug/*.node ../dist/ubc-linux/",
    "build-info": "cd ./info-serv-info-cmc && node-gyp configure build && mkdir -p ../dist/info-serv-info-cmc/info-serv-addon && cp ./info-serv-addon/libSubscriber.so ./build/Release/*.node ../dist/info-serv-info-cmc/info-serv-addon/ -ru",
    "build-all": "npm run build && npm run copymockdata",
    "build-all:prod": "npm run with:prod && npm run build-all",
    "build-all:dev": "npm run with:dev && npm run build-all",
    "release": "npx electron-builder build --linux",
    "unit-tests": "_mocha -- -R dot --no-timeout 'dist/test/unit/**/*test.js' --exclude 'dist/test/unit/info-serv-info-cmc/**/*test.js' --exit",
    "beteng-test": "_mocha  --exit --no-timeout --opts beteng-serv/mocha.opts",
    "hw-test": "_mocha  --exit dist/test/unit/hw-serv/**/*test.js",
    "main-test": "_mocha  --exit dist/test/unit/main-rpoc/**/*test.js",
    "hw-coverage": "nyc _mocha  --exit dist/test/unit/hw-serv/**/*test.js",
    "hw-local-test": "node_modules/mocha/bin/_mocha --no-timeout dist/test/unit/hw-serv/**/*test.local.js",
    "beteng-build": "tsc -p beteng-serv/tsconfig.json",
    "mainproc-build": "tsc -p main-proc/tsconfig.json",
    "coverage-i": "istanbul cover _mocha -- -R dot --no-timeout 'dist/test/unit/**/*test.js' --exit",
    "coverage": "nyc _mocha -- -R dot --no-timeout 'dist/test/unit/**/*test.js' --exit",
    "copymockdata": "cp -rf ./info-serv-ws-cmc/mockData ./dist/info-serv-ws-cmc",
    "test": "npm run unit-tests",
    "copyHWRes": "cp -rf ./hw-serv/data ./dist/hw-serv && sudo cp ./misc/kiosk-scripts/set-ip.sh ./dist/hw-serv/data/script",
    "build:package": "electron-packager . --out=out",
    "build:snap": "electron-installer-snap --src=out/myappname-linux-x64",
    "build-all-w-hwAddon:prod": "npm run build-all:prod && npm run build-hw-addon",
    "build-all-w-hwAddon:dev": "npm run build-all:dev && npm run build-hw-addon",
    "with:prod": "cp -f ./share/environments/environment.prod.ts ./share/environments/environment.ts",
    "with:dev": "cp -f ./share/environments/environment.dev.ts ./share/environments/environment.ts",
    "watch-ts": "tsc -w -p tsconfig-serve.json",
    "prettier": "prettier --write '**/*.{ts,js,css,html}'"
  },
  "dependencies": {
    "alasql": "^0.4.11",
    "axios": "^0.19.0",
    "axios-https-proxy-fix": "^0.17.1",
    "bindings": "*",
    "body-parser": "^1.19.0",
    "bufferutil": "^4.0.1",
    "crypto-js": "^4.0.0",
    "date-fns": "^2.0.1",
    "electron-updater": "4.3.5",
    "express": "^4.10.8",
    "forever": "^1.0.0",
    "fs-extra": "^8.1.0",
    "kill-port": "^1.6.0",
    "lockfile": "^1.0.4",
    "log4js": "^4.1.0",
    "nedb": "^1.8.0",
    "network": "^0.5.0",
    "ng-zorro-antd": "7.5.1",
    "ng6-socket-io": "^1.0.3",
    "ngx-loading": "^3.0.1",
    "ngx-swiper-wrapper": "^7.0.0",
    "node-sass": "^4.13.0",
    "proper-lockfile": "^4.1.1",
    "rxjs": "6.3.3",
    "socket.io": "^2.0.4",
    "three": "^0.104.0",
    "tslint-etc": "^1.10.1",
    "utf-8-validate": "^5.0.2",
    "utf8": "^3.0.0",
    "xml2js": "^0.4.19",
    "zlib": "^1.0.5"
  },
  "devDependencies": {
    "@angular/animations": "^7.1.0",
    "@istanbuljs/nyc-config-typescript": "^0.1.3",
    "@types/express": "^4.0.39",
    "@types/socket.io": "^1.4.40",
    "@types/swiper": "^4.4.2",
    "@types/three": "^0.103.2",
    "@types/utf8": "^2.1.6",
    "@angular-devkit/build-angular": "~0.10.0",
    "@angular/cli": "7.3.9",
    "@angular/common": "7.0.3",
    "@angular/compiler": "7.0.3",
    "@angular/compiler-cli": "7.0.3",
    "@angular/core": "7.0.3",
    "@angular/forms": "7.0.3",
    "@angular/http": "7.0.3",
    "@angular/language-service": "7.0.3",
    "@angular/platform-browser": "7.0.3",
    "@angular/platform-browser-dynamic": "7.0.3",
    "@angular/router": "7.0.3",
    "@ngx-translate/core": "^11.0.1",
    "@ngx-translate/http-loader": "^4.0.0",
    "@pscoped/ngx-pub-sub": "^2.0.3",
    "@types/fs-extra": "^8.0.0",
    "@types/mocha": "^5.2.7",
    "@types/node": "^11.11.3",
    "@types/proper-lockfile": "^4.1.1",
    "@types/supertest": "^2.0.7",
    "codelyzer": "4.2.1",
    "conventional-changelog-cli": "^2.0.11",
    "core-js": "2.5.6",
    "electron": "4.0.0",
    "electron-builder": "20.28.1",
    "electron-installer-snap": "^4.0.0",
    "electron-reload": "1.2.2",
    "jasmine-core": "3.1.0",
    "jasmine-spec-reporter": "4.2.1",
    "karma": "2.0.2",
    "karma-chrome-launcher": "2.2.0",
    "karma-coverage-istanbul-reporter": "2.0.0",
    "karma-jasmine": "1.1.2",
    "karma-jasmine-html-reporter": "1.1.0",
    "mocha": "^6.2.2",
    "node-addon-api": "^1.6.3",
    "npm-run-all": "4.1.3",
    "npx": "10.2.0",
    "nyc": "^14.1.1",
    "protractor": "^5.4.1",
    "run-electron": "^1.0.0",
    "should": "^13.2.3",
    "supertest": "^4.0.2",
    "ts-node": "6.0.3",
    "tslint": "5.10.0",
    "typescript": "3.1.6",
    "wait-on": "2.1.0",
    "webdriver-manager": "12.0.6",
    "zone.js": "0.8.26"
  }
}
